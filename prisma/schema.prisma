generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Audiobook {
  id         Int       @id @default(autoincrement())
  imageUrl   String
  title      String
  slug       String    @unique
  synopsis   String
  deleted    Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  detail     DetailAudiobook? // One-to-one ke DetailAudiobook 
  chapters   Chapter[]        // One-to-many ke Chapter
}

model DetailAudiobook {
  id          Int       @id @default(autoincrement())
  author      String
  editor      String
  genre       String
  voiceActor  String
  status      String

  audiobookId Int       @unique // Kunci asing ke Audiobook
  audiobook   Audiobook @relation(fields: [audiobookId], references: [id]) // Relasi dengan Audiobook
}

model Chapter {
  id            Int       @id @default(autoincrement())
  chapterNumber Int
  deleted       Boolean    @default(false)
  slug          String     @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  detail        DetailChapter? // One-to-one ke DetailChapter 
  audiobookId   Int       // Kunci asing ke Audiobook
  audiobook     Audiobook @relation(fields: [audiobookId], references: [id]) // Relasi dengan Audiobook
}

model DetailChapter {
  id        Int     @id @default(autoincrement())
  content   String
  audioUrl  String

  chapterId Int     @unique // Kunci asing ke Chapter
  chapter   Chapter @relation(fields: [chapterId], references: [id]) // Relasi dengan Chapter
}

model DataOverview {
  id                 Int      @id @default(autoincrement())
  header             String?  // Optional: Judul utama
  headerDescription  String?  // Optional: Deskripsi header
  headerButton       String?  // Optional: Teks tombol header
  headerButtonLink   String?  // Optional: Link tombol header
  bannerImage        String?  // Optional: Path ke gambar banner
  bannerLink         String?  // Optional: Link banner
  aboutImage         String?  // Optional: Path ke gambar tentang
  aboutDescription   String?  // Optional: Deskripsi bagian 'About'
  donationHeading    String?  // Optional: Judul bagian donasi
  donationButton     String?  // Optional: Teks tombol donasi
  donationButtonLink String?  // Optional: Link tombol donasi
  color              String?  // Optional: Warna utama
  logo               String?  // Optional: Path ke logo
  createdAt          DateTime @default(now()) // Timestamp untuk pencatatan waktu pembuatan
  updatedAt          DateTime @updatedAt      // Timestamp untuk pencatatan waktu pembaruan
}
